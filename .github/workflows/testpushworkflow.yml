name: List Modified Files in PR

on:
  pull_request:
    branches:
      - main

jobs:
  list-modified-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get the list of modified files
        id: modified_files
        run: |
          # Fetch all commits to ensure we have the base commit reference
          git fetch --prune --unshallow
          
          # Get the list of changed files between the base and head commits for the PR
          # Using `github.event.pull_request.base.sha` (base commit) and `github.sha` (head commit)
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '^(functionapp/|AzureStorageQueueTriggerFunction/)' > modified_files.txt
          git diff --name-only --diff-filter=AM origin/main...HEAD | grep '/.*' | sed 's|/.*||' | sort -u > listoffolders.txt

          # Output the list of modified files
          echo "fileshvjcdbdsjc modfied start"
          cat listoffolders.txt
          echo "filesnbjhfeh modfied end"

          
          # Output the list of modified files
          echo "files modfied start"
          cat modified_files.txt
          echo "files modfied end"

      - name: Set modified files as output
        run: |
          # Make the list of modified files available for later steps
          echo "::set-output name=modified_files::$(cat modified_files.txt)"
      - name: Check if modified files are from functionapp or AzureStorageQueueTriggerFunction
        id: check-changes
        run: |
          # Check if any modified file is in functionapp or AzureStorageQueueTriggerFunction
          if grep -q '^functionapp/' modified_files.txt; then
            echo "functionapp changes detected."
            echo "EXECUTE_FUNCTIONAPP=true" >> $GITHUB_ENV
          fi
          
          if grep -q '^AzureStorageQueueTriggerFunction/' modified_files.txt; then
            echo "AzureStorageQueueTriggerFunction changes detected."
            echo "EXECUTE_AZURE_STORAGE=true" >> $GITHUB_ENV
          fi

